FARE UN FILE PERIODICO

secondary match
13/15 LZ77 immagini


’algoritmo LZ77 fa una assunzione implicita: i pattern ripetuti sono sufficientemente vicini,
in particolare le loro occorrenze cadono all’interno del search buffer. Questa assunzione fa s`ı
che, nel caso ci siano pattern frequenti ma a distanza maggiore della taglia del search buffer,
essi vengano codificati senza sfruttare le loro occorrenze ripetute. Si pensi ad esempio ad una
sequenza periodica di periodicit`a pi`u lunga della finestra: essa ha sicuramente bassa entropia,
ma l’algoritmo non riesce a sfruttarne la periodicit`a e produce una codifica con rate piuttosto
scarso. L’algoritmo LZ78 si differenzia proprio per il fatto che questa assunzione non compare

Qui e' definito il DEFLATE
http://tools.ietf.org/html/rfc1951


Deflate
[R1951] (letteralmente “sgonfiare”) utilizza un search buffer di taglia 32 KB ed un
look-ahead buffer di taglia 258 B: il primo `e molto pi`u grande rispetto al secondo perch ́e pi`u
`e lunga la sequenza all’interno della quale cercare il prefisso, pi`u `e probabile che questo sia
lungo, quindi permetta di ottenere una codifica pi`u compatta. Questi parametri influiscono
inoltre sulla velocit`a d’esecuzione, dato che pi`u grandi sono i buffer, pi`u lungo `e il tempo
richiesto per ricercare possibili prefissi

comunque bene specificare che l’aumento della taglia del search buffer oltre una certa
soglia non comporta necessariamente un sostanziale miglioramento del rate di compressione,
in quanto saranno necessari pi`u bit per rappresentare gli offset e le lunghezze dei prefissi nelle
tripl

mantenendo la coding window fissa a 1000 le prestazioni non cambiano


ricerca per bisezione, parola lunga o parola corta della coding window
